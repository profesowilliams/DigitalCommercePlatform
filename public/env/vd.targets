<!-- 
 **************************************************************************************************************
 *  BUILD PROCESS FOR WINDOWS INSTALLER .VD PROJECTS
 **************************************************************************************************************
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  
  <!-- 
  **************************************************************************************************************
  *  Globals
  **************************************************************************************************************
  -->
  <PropertyGroup Label="Globals">
    <OutDir>.\bin\$(Platform)$(Configuration)\</OutDir>
    <OutputPath>.\bin\$(Platform)$(Configuration)\</OutputPath>	 
	<IntDir>.\obj\$(Platform)$(Configuration)\</IntDir>
	<IntermediateOutputPath>.\obj\$(Platform)$(Configuration)\</IntermediateOutputPath>	     
  
    <BuildDependsOn> 
     (BuildDependsOn); 
      CopyOutputToDestination; 
    </BuildDependsOn> 
  </PropertyGroup>
  
  <ItemGroup>  
    <OutputFiles Include="$(OutputPath)**\*"/>  
  </ItemGroup>  
  
  <ItemGroup>  
    <IntermediateOutputFiles Include="$(IntermediateOutputPath)**\*"/>  	
  </ItemGroup>    
  

  <!-- 
  **************************************************************************************************************
  *  TARGET Build
  **************************************************************************************************************
  -->
  <Target Name="Build"  DependsOnTargets="Clean" AfterTargets="Compile">
    <Message Text="Initializing Windows Installer Build Process for $(Platform)/$(Configuration).. (Build)" Importance="High" />

	<!-- Copy the source files to the intermediate folder -->
	<Copy SourceFiles="@(SourceFiles)" DestinationFolder="$(IntermediateOutputPath)"></Copy>
	
	<!-- if VS 2017 Professional is installed on the build machine, use that to compile the installer project -->	
	<Exec Command="&quot;$(ProgramFiles)\Microsoft Visual Studio\2017\Professional\Common7\IDE\devenv&quot; &quot;$(MSBuildProjectDirectory)\$(ProjectFile)&quot; /Build &quot;$(Configuration)|$(Platform)&quot;" ConsoleToMSBuild="true"  Condition="Exists('$(ProgramFiles)\Microsoft Visual Studio\2017\Professional\Common7\IDE\devenv.exe')">
        <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
		<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
    </Exec>	
	
	<!-- if VS 2017 Community is installed on the build machine, use that to compile the installer project -->	
	<Exec Command="&quot;$(ProgramFiles)\Microsoft Visual Studio\2017\Community\Common7\IDE\devenv&quot; &quot;$(MSBuildProjectDirectory)\$(ProjectFile)&quot; /Build &quot;$(Configuration)|$(Platform)&quot;" ConsoleToMSBuild="true"  Condition="Exists('$(ProgramFiles)\Microsoft Visual Studio\2017\Community\Common7\IDE\devenv.exe')">
        <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
		<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
    </Exec>	
	
	<!-- if VS 2017 Enterprise is installed on the build machine, use that to compile the installer project -->	
	<Exec Command="&quot;$(ProgramFiles)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\devenv&quot; &quot;$(MSBuildProjectDirectory)\$(ProjectFile)&quot; /Build &quot;$(Configuration)|$(Platform)&quot;" ConsoleToMSBuild="true"  Condition="Exists('$(ProgramFiles)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\devenv.exe')">
        <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
		<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
    </Exec>	
	
    <!-- check the error code on the compiler and ensure it completes successfully -->
    <Error Condition="'$(ErrorCode)' != '0'" Text="devenv.exe compiler failed with exit code $(ErrorCode)"/>

  </Target>
  

  
  <!-- 
  **************************************************************************************************************
  *  TARGET CopyOutputToDestination
  **************************************************************************************************************
  -->
  <Target Name="CopyOutputToDestination" AfterTargets="Build">

    <ItemGroup>
      <OutputFiles Include="$(IntermediateOutputPath)*.msi"></OutputFiles>
    </ItemGroup>

    <Message Text="Copying output file to destination: @(OutputFiles)" Importance="high"/>

    <Copy SourceFiles="@(OutputFiles)" 
          DestinationFolder="$(OutputPath)" 
          OverwriteReadOnlyFiles="true"></Copy>

  </Target>


  
  <!-- 
  **************************************************************************************************************
  *  TARGET Clean
  **************************************************************************************************************
  -->
  <Target Name="Clean" >  
     <Message Text="Initializing Windows Installer Clean Process for $(Platform)/$(Configuration).. (Clean)" Importance="High" />
     <Delete Files="@(OutputFiles)" />  	 
	 <Delete Files="@(IntermediateOutputFiles)" />  
	 
	 <RemoveDir Directories="$(OutputPath)" />
	 <RemoveDir Directories="$(IntermediateOutputPath)" />
  </Target>  
  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />  

</Project>
