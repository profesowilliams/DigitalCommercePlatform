<?xml version="1.0" encoding="utf-8"?>
<!--
 **************************************************************************************************************
 * Source File Name: enterprisebuild.process.tasks
 * Author: jhudak
 * Description: Contains custom msbuild inline tasks used by the enterprise build process.
 **************************************************************************************************************
-->
<Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' ToolsVersion="15.0">

  <!-- 
  **************************************************************************************************************
  *  TARGETNAME:  CreateRegistryKeyForView
  *  DESCRIPTION: Sets a registry key for a given registry virtualization view
  **************************************************************************************************************
  --><!--
  <UsingTask TaskName="CreateRegistryKeyForView" TaskFactory="CodeTaskFactory" AssemblyFile="$(PublicDotNet40ToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <Hive ParameterType="System.String" Required="true" />
      <View ParameterType="System.String" Required="true" />
      <Subkey ParameterType="System.String" Required="true" />
      <Name ParameterType="System.String" Required="true" />
      <Value ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="Microsoft.Win32" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
            
            RegistryKey registryKey = null;
            RegistryKey sk = null;
            
            if (View == "REG32") 
            { 
               registryKey = RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive.LocalMachine, RegistryView.Registry32);  
            } 
            else if (View == "REG64") 
            { 
               registryKey = RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive.LocalMachine, RegistryView.Registry64);                 
            }

            try
            {
               sk = registryKey.CreateSubKey(Subkey);
            }
            catch
            {
            }
            
            sk.SetValue(Name, Value);
            
            sk.Close();            
            registryKey.Close();
        ]]>
      </Code>
    </Task>
  </UsingTask>-->

</Project>
